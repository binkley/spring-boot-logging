plugins {
    id "maven"
    id "java"
    id "build-dashboard"
    id "io.spring.dependency-management"
    id "org.springframework.boot"

    id "com.dorongold.task-tree"
    id "com.github.ben-manes.versions"
    id "se.patrikerdes.use-latest-versions"
    id "com.gorylenko.gradle-git-properties"
}

group = "x"
version = "0-SNAPSHOT"

sourceCompatibility = 11
targetCompatibility = 11

ext["assertj.version"] = assertJVersion
ext["flyway.version"] = flywayVersion
ext["junit-jupiter.version"] = junitVersion
ext["micrometer.version"] = micrometerVersion
ext["mockito.version"] = mockitoVersion

configurations {
    all {
        resolutionStrategy {
            if (false) failOnVersionConflict() // TODO: Lots of conflicts

            // TODO: Why are these versions getting lost in Gradle?
            eachDependency { details ->
                if (details.requested.group == "io.micrometer")
                    details.useVersion "${micrometerVersion}"
                if (details.requested.group == "org.springframework.boot")
                    details.useVersion "${springBootVersion}"
            }
        }
    }

    compileOnly {
        extendsFrom annotationProcessor
    }

    all*.exclude module: "junit"
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    compileOnly "org.projectlombok:lombok"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "io.micrometer:micrometer-registry-prometheus"
    implementation "org.springframework.cloud:spring-cloud-starter-sleuth"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "org.zalando:logbook-spring-boot-starter"
    implementation "com.github.jsqlparser:jsqlparser:${jsqlparserVersion}"
    implementation "net.sf.jopt-simple:jopt-simple:${joptSimpleVersion}"

    // TODO: Hrm ... too many dependencies for problems
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.zalando:problem-spring-web:${problemSpringWebVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"

    testAnnotationProcessor "org.projectlombok:lombok"

    testCompileOnly "org.projectlombok:lombok"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.javassist:javassist:${javassistVersion}"

    runtimeOnly "net.logstash.logback:logstash-logback-encoder:${logstashVersion}"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.flywaydb:flyway-core"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.zalando:logbook-bom:${logbookVersion}"
    }
}

test {
    failFast = true

    systemProperty "java.util.logging.config.file", "${project.rootDir}/config/logging.properties"

    testLogging {
        showCauses = true
        showExceptions = true
        showStackTraces = true
        showStandardStreams = true
    }

    useJUnitPlatform()

    testLogging {
        showExceptions = true
        showStandardStreams = true
    }
}

bootJar {
    launchScript()
}

bootRun {
    systemProperties = System.properties as Map<String, ?>
}

springBoot {
    buildInfo()
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = "${gradleWrapperVersion}"
}

defaultTasks "build"
